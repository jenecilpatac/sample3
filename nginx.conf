events {}

http {
    upstream html_servers {
        # Define backend HTML page services (with multiple replicas)
        server html-page1:5003;
        server html-page2:5003;
        server html-page3:5003;
    }

    # This server block handles HTTP requests on port 5003
    server {
        listen 5003;

        server_name 185.199.52.40;

        # Check if the connection is secure (HTTPS) based on the presence of the $ssl_protocol variable
        if ($ssl_protocol = "") {
            # Handle HTTP traffic
            location / {
                proxy_pass http://html_servers;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }

    # This server block handles HTTPS requests on port 5003
    server {
        listen 5003 ssl;

        server_name your_domain_or_ip;

        ssl_certificate /etc/ssl/certs/selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/selfsigned.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers on;

        # Handle HTTPS traffic
        location / {
            proxy_pass http://html_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
